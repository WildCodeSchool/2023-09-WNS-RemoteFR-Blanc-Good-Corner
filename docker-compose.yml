version: '3'

services:
  backend:
    build: ./backend
    ports:
      - 4000:3001
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # - ./backend/good_corner_typeorm.sqlite:/app/good_corner_typeorm.sqlite
      - ./backend/.env:/app/.env:rw
      - ./backend/jest.config.js:/app/jest.config.js:rw
      - ./backend/src:/app/src:rw
      - ./backend/node_modules:/app/node_modules
      - ./backend/package.json:/app/package.json:rw
      - ./backend/migrations:/app/migrations:rw

  frontend:
    build: ./frontend
    command: npm run dev
    env_file: .env.dev
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app:rw,cached
      # - ./frontend/node_modules:/app/node_modules
      # - ./frontend/jest.config.ts:/app/jest.config.ts:rw
      # - ./frontend/jest.setup.ts:/app/jest.setup.ts:rw
      # - ./frontend/package.json:/app/package.json:rw

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: goodcorner
      POSTGRES_PASSWORD: password
      POSTGRES_DB: goodcornerdb
      PGDATA: customDataFolder
    volumes:
      - ./dbData:/var/lib/postgresql/data/customDataFolder
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d goodcornerdb -U goodcorner" ]
      interval: 5s
      timeout: 5s
      retries: 10

  images:
    build: ./images
    volumes:
      - ./images/src:/app/src
      - ./images/uploads:/app/uploads
    ports:
      - 8000:8000

  adminer:
    image: adminer
    ports:
      - 8080:8080